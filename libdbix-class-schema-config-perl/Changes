0.1.11
    - Using dbh_maker in a hash to connect() will not result
      in connect() passing through your arguments after merging
      into a single hash.
    - Using a code ref for the first argument will now result
      in connect() passing through your arguments as-is.
    - README.pod symlink replaces pod2markdown use (YAY!)
    - namespace::clean used to prevent methods from leaking
    - Merge functionality replaced with Hash::Merge
    - Additional attributes passed to connect() will now overwrite
      the loaded configuration file.
    - Removed Test::MockObject as a dependency
    - Improved caching layer to prevent stale cache
    - Changed tests to use the correct password attribute
    - Updated Documentation

0.1.10
    - Introduce a public config() getter to allow access to the loaded
      Config::Any object.

0.1.9
    - Fix perl 5.17 hash randomisation breakage (RT#83309)

0.1.8
    - Added class accessor config_files to use Config::Any's
      load_files method and reduce stat() calls for those who
      like that kind of thing.
    - Moved the Config::Any parser to its own private function.
    - DBIX_CONFIG_DIR environment allows run-time injection of
      a directory that contains a dbic.* file.
0.1.7
    - Use File::HomeDir instead of env, thanks @ Christian Walde
    - CHANGELOG -> Changes
    - BSD License -> Perl License
    - README.pod -> Readme.md
    - Contributor Addition (Christian Walde)
0.1.6
    - Once more with feeling.
0.1.5
    - Re-release due to broken MANIFEST.skip and outdated README.pod
0.1.4 
    - Config::Any added as a requirement
    - Tests now use the included .perl format (No more YAML::XS requirement)
    - Tests changed to support DBIx::Class 0.80123
    - Document Changes
        - Linked to tutorial
        - Added CONTRIBUTOR section
            - Thanks mst and ribasushi for the constant reviews!
    - Pushed to CPAN as a stable release
0.1.3 
    - connect() now handles passing through valid-looking DBI connect structures.
    - _make_config now checks for $user and $pass to be hashrefs, this adds support
      for structures like ->connect( 'CONFIG', { hostname => 'db.foo.com' } );
    - Added tests to 01_*.t to ensure the new signatures work correctly.
    - Updated tests in 06_*.t to use ->connect ('CONFIG', { dbname => ":memory:" )
      to be more clear, as opposed to riding ->{user}
    - Updated documentation to reflect the changes to the code, namely the hashref
      as the second argument, and the statements referring to load_credentials having
      responsibility to return normal DBI connect structures.
    -  Config::Any is only loaded when it's needed.
0.1.2
    - Makefile.PL depends on DBD::SQLite not DBD::SQLite3
    - _make_config has a less annoying return
    - connection() no longer tries to block ->load_credentials,
      it is load_credential's responsablity to to check for credentials
      it should allow to fall through.
    - Added accessor on_credential_load, it provides access to the config
      structure that load_credentials creates, and expects it as the return.
      It can be used to make changes to the credentials, such as decrypting
      passwords from the config file.
    - A new Schema base was created for testing on_credential_load
    - New tests added for on_credential_load
0.1.1:
    - Replace SUPER:: with next::method
    - Don't call load_credentials unless we're actually going to load some
    - Move Config::Any into load_credentials to be lazy
    - Allow handling of a normal hashref, no ->{options} (Should make handling cleaner)
    - Add Testing schema for integration tests
0.1.0:
    - Inital Version
